cmake_minimum_required(VERSION 3.12..4.0)

project(recursion-effect VERSION 0.0.4)
set(PROJECT_FULL_NAME "Recursion Effect")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/version.h.in ${CMAKE_CURRENT_SOURCE_DIR}/version.h)

set(recursion-effect_HEADERS
	recursion-effect.h
	version.h)
set(recursion-effect_SOURCES
	recursion-effect.c)

if(WIN32)
	get_filename_component(ISS_FILES_DIR "${CMAKE_BINARY_DIR}\\..\\package" ABSOLUTE)
	file(TO_NATIVE_PATH "${ISS_FILES_DIR}" ISS_FILES_DIR)
	get_filename_component(ISS_PACKAGE_DIR "${CMAKE_PACKAGE_PREFIX}\\.." ABSOLUTE)
	file(TO_NATIVE_PATH "${ISS_PACKAGE_DIR}" ISS_PACKAGE_DIR)
	get_filename_component(ISS_SOURCE_DIR "${PROJECT_SOURCE_DIR}" ABSOLUTE)
	file(TO_NATIVE_PATH "${ISS_SOURCE_DIR}" ISS_SOURCE_DIR)
	configure_file("installer.iss.in"
			"${PROJECT_BINARY_DIR}/installer.iss"
		)
	configure_file(resource.rc.in recursion-effect.rc)
	list(APPEND recursion-effect_SOURCES
		recursion-effect.rc)
endif()

if(BUILD_OUT_OF_TREE)
    find_package(LibObs REQUIRED)
endif()

add_library(recursion-effect MODULE
	${recursion-effect_HEADERS}
	${recursion-effect_SOURCES})
target_link_libraries(recursion-effect
	libobs)

if(BUILD_OUT_OF_TREE)
    if(NOT LIB_OUT_DIR)
        set(LIB_OUT_DIR "/lib/obs-plugins")
    endif()
    if(NOT DATA_OUT_DIR)
        set(DATA_OUT_DIR "/share/obs/obs-plugins/recursion-effect")
    endif()
    set_target_properties(recursion-effect PROPERTIES PREFIX "")
    install(TARGETS recursion-effect
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_OUT_DIR})
    install(DIRECTORY data/locale
        DESTINATION ${CMAKE_INSTALL_PREFIX}/${DATA_OUT_DIR})
else()
    set_target_properties(recursion-effect PROPERTIES FOLDER "plugins/exeldro")
    install_obs_plugin_with_data(recursion-effect data)
endif()
